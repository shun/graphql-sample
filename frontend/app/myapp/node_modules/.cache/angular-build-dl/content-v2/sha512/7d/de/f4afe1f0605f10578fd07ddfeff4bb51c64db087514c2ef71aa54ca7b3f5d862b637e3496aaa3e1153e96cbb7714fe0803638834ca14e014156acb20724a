{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","apollo","title","console","log","evt","registerData","file","target","files","reader","FileReader","readAsText","self","onload","lines","result","split","forEach","line","length","items","user","parseInt","firstname","lastname","mail","push","mutation_addUsers","mutate","mutation","variables","users","subscribe","getClient","cache","reset","error","onBtnFileAttached","onBtnRegister","selector","templateUrl","styleUrls","AppModule","httpLink","create","link","uri","declarations","providers","bootstrap","schemas","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n//import { UserInput, AddUsersPostGQL } from './users.mutation';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nexport interface UserInput {\n  id: number;\n  firstname: string;\n  lastname: string;\n  mail: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    './app.component.css'\n  ]\n})\n\nexport class AppComponent implements OnInit {\n  title = 'myapp';\n  value: Date;\n  registerData: UserInput[];\n\n  constructor(private apollo: Apollo) {\n    console.log('AppComponent');\n    console.log(apollo);\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit');\n  }\n\n\n  onBtnFileAttached(evt) {\n    console.log('onBtnFileAttached');\n    console.log(this.registerData);\n    const file = evt.target.files[0];\n\n    const reader = new FileReader();\n    reader.readAsText(file);\n\n    let self = this;\n    this.registerData = [];\n    reader.onload = () => {\n      let lines = (reader.result as string).split(\"\\n\");\n      lines.forEach (line => {\n        if (line.length !== 0) {\n          let items = line.split(\",\");\n          let user: UserInput = {\n                      id: parseInt(items[0]),\n                      firstname: items[2],\n                      lastname: items[1],\n                      mail: items[3]};\n\n          self.registerData.push(user);\n          console.log(self.registerData);\n        }\n\n      });\n    }\n  }\n\n  onBtnRegister(evt) {\n    console.log('onBtnRegister');\n\n    const mutation_addUsers = gql`\n      mutation addUsers($users: [UserInput]) {\n        addUsers(users: $users)\n      }\n    `;\n    this.apollo.mutate({\n      mutation: mutation_addUsers,\n      variables: {\n        users: this.registerData\n      }\n    })\n    .subscribe(() => {\n      this.apollo.getClient().cache.reset();\n    }, (error) => {\n      console.log('error: ', error);\n    });\n  }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class='myapp-container'>\n\n    <div class='myapp-bar'>\n      <h1>\n        app-bar\n      </h1>\n    </div>\n\n  <div class='myapp-container'>\n    <div class='myapp-content'>\n\t\t\t<form name='import-users'>\n\t\t\t\t<input type='file' (change)='onBtnFileAttached($event)'/>\n\t\t\t</form>\n      <button type='button' (click)='onBtnRegister($event)'>一括登録</button>\n    </div>\n  </div>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApolloModule, Apollo } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ApolloModule,\n    HttpLinkModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule {\n  constructor(apollo: Apollo, httpLink: HttpLink) {\n    apollo.create({\n      link: httpLink.create({uri: 'http://192.168.1.161:4000/graphql'}),\n      cache: new InMemoryCache()\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}